<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Scrcpy使用教程</title>
    <link href="/sun/2023/09/20/Scrcpy%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <url>/sun/2023/09/20/Scrcpy%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>Scrcpy下载地址：<a href="https://github.com/Genymobile/scrcpy"class="uri">https://github.com/Genymobile/scrcpy</a></p><p><br></p><p><strong>使用ADB连接</strong></p><p>有线连接或者无线连接都需要手机打开开发者模式的usb调试，无线连接还需要开启无线调试<br />无线连接需要通过命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb connect ip:5555<br></code></pre></td></tr></table></figure>连接成功后通过adb命令可以看到设备序列号UUID <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb devices<br></code></pre></td></tr></table></figure>只有一个设备的话可以直接启动scrcpy投屏 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scrcpy<br></code></pre></td></tr></table></figure>有多个设备的情况下可以通过下面命令选择指定设备</p><p>无线投屏 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scrcpy -s ip:5555<br></code></pre></td></tr></table></figure> 有线连接 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scrcpy -s UUID<br></code></pre></td></tr></table></figure></p><p><strong>屏幕常亮</strong></p><p>scrcpy本身支持有线模式下的屏幕常亮,不过无线连接时不能保持屏幕常亮.我们可以通过adb命令来解决这个问题<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell input keyevent 0<br></code></pre></td></tr></table></figure>原理也很简单,就是adb模拟按下按键0,按键0在安卓系统里代表未知按键,没有作用,不过能保持屏幕常亮,这里我使用python脚本来每10s执行一次adb指令<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    os.system(<span class="hljs-string">&quot;adb shell input keyevent 0&quot;</span>)<br>    time.sleep(<span class="hljs-number">10</span>)<br></code></pre></td></tr></table></figure></p><p><br></p><p><strong>Scrcpy常用快捷键</strong></p><p><strong>MOD在Windows下默认为Alt</strong></p><table><thead><tr class="header"><th>快捷键</th><th>作用</th></tr></thead><tbody><tr class="odd"><td>Ctrl+c</td><td>复制</td></tr><tr class="even"><td>Ctrl+x</td><td>剪切</td></tr><tr class="odd"><td>Ctrl+v</td><td>粘贴 （但仅在 Android &gt;= 7 上支持）</td></tr><tr class="even"><td>MOD+f</td><td>全屏</td></tr><tr class="odd"><td>MOD+ [ ← → ]</td><td>向左向右旋转</td></tr><tr class="even"><td>MOD+s</td><td>最近任务</td></tr><tr class="odd"><td>MOD+g</td><td>将窗口大小调整为 1:1</td></tr><tr class="even"><td>MOD+w | 双击左键</td><td>调整窗口大小以去除黑边</td></tr><tr class="odd"><td>MOD+h | 中键单击</td><td>点击 HOME</td></tr><tr class="even"><td>MOD+b | 右键单击</td><td>点击返回</td></tr><tr class="odd"><td>MOD+m</td><td>点击（解锁屏幕）⁴MENU</td></tr><tr class="even"><td>MOD+↑↓</td><td>音量加减</td></tr><tr class="odd"><td>MOD+p</td><td>点击电源键</td></tr><tr class="even"><td>MOD+o</td><td>关闭设备屏幕（保持镜像）</td></tr><tr class="odd"><td>MOD+Shift+o</td><td>打开设备屏幕</td></tr><tr class="even"><td>MOD+r</td><td>切换横屏竖屏</td></tr><tr class="odd"><td>MOD+n</td><td>展开通知面板</td></tr></tbody></table><p><br></p><p><strong>文件传输</strong></p><p>直接把文件拖到scrcpy窗口文件就会通过adb传输到手机Download目录</p><p><strong>键盘映射</strong></p><p>在投屏上可以直接用电脑键盘输入英文,只有电脑键盘为英文模式下有用</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>E类放大器原理</title>
    <link href="/sun/2023/09/20/E%E7%B1%BB%E6%94%BE%E5%A4%A7%E5%99%A8%E5%8E%9F%E7%90%86/"/>
    <url>/sun/2023/09/20/E%E7%B1%BB%E6%94%BE%E5%A4%A7%E5%99%A8%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://www.kechuang.org/t/78392"class="uri">https://www.kechuang.org/t/78392</a></p><p>不少人第一次听说E类功放都是因为那个class ESSTC，从网上查询却发现资料少的可怜，其原理和设计方法就更无从谈及。下面我就根据书中所写以及自己的理解讲一下。讲之前还需说一下，因为电路分析必须涉及微积分，所以不懂的最好查一下，不需要会解，能明白符号含义和表达式意义就行。</p><p><strong>E类功放产生的原因</strong></p><p><br></p><p>D类功放是较早出现的一类开关功放，其出现促进了逆变技术的发展。由于晶体管处于开关状态，理论上可以达到100%的效率。由于晶体管势垒电容、扩散电容以及电路中分布电容的影响，晶体管由饱和到截止或由截止到饱和，都需要一定的转换时间。因而导致转换时间内管子的集电极电流和集电极电压均会有较大的数值致使管耗增加。寄生电容不太大，工作频率较低时，可忽略其影响。然而工作频率较高时，管耗的增加就无法忽略，使效率降低，甚至使器件损坏。为了弥补这一缺陷，E类功放应运而生。</p><p><strong>E类功放的原理</strong></p><p><br></p><p>下图为E类功放的电路图</p><figure><img src="00.png" alt="E类功放的电路图" /><figcaption aria-hidden="true">E类功放的电路图</figcaption></figure><p>与电源相连的的电感为射频扼流圈，允许直流通过为电路提供能量，阻止射频电流从此传出，理想状态下感抗无穷大。LX的作用是提供一定的感抗，具体的原因会在之后说明。LS和CS构成谐振于信号基波频率的串联谐振电路，理想状态下品质因数Q无穷大。RL为负载电阻。开关管等效为开关和输出寄生电容的并联电路，用开关代替开关管等效电路中的开关，电容CP代替开关管输出端的寄生电容。</p><p>电路图中标出了部分电压或电流。Idc是输入电流；i(t)和u(t)分别是开关和电容CP并联部分的电流和电压，也就是开关管的电流和电压，都是时间函数；isw(t)和ic(t)分别是开关和电容CP两端的电流，也都是时间函数；Irfcosωt是射频电流的时间函数，射频电流峰值即为系数Irf。</p><p>设1.png。下图为这些电压或电流随时间变化的图像，也就是他们的波形。由上图可以看出，i(θ)是输入电流和射频电流之和。-α1到2π-α1为一个工作周期。-α1到α2开关管导通，这时u(θ)等于零，ic(θ)也等于零，isw(θ)和i(θ)相同；α2到2π-α1开关管截止，这时isw(θ)等于零，ic(θ)与i(θ)相同，u(θ)即为电容两端电流的积分。2π-α1时，u(θ)恰好降为零，然后进入下一周期，开关管导通。可以看出，寄生电容两端电压为零时开关管才导通，这就解决了之前提到的问题。开关管电压和电流乘积始终为零，因此其理论效率为100%。0.png</p><p><strong>E类功放的设计</strong></p><p><br></p><p>-α1到α2开关管导通，因此开关管导通角为 2.png ① 根据之前的分析可以得到3.png ② 设 4.png 那么 5.png根据之前的分析及图像，很容易得出开关管峰值电流 6.png-α1时开关管电流为零，代入式②可以得到 7.png 8.png ③一个工作周期内，开关管导通时流过的电流的平均值等于输入电流，因此可以得到9.png 10.png ④ 代入式①和③进一步化简可以得到 11.png这样就得到m和导通角Φ之间的关系，进而可以把很多量和导通角Φ联系起来。开关管截止时，两端电压u(θ)为电流在电容CP上的积分 12.png 13.png当开关管电流为零时，电压达到最大值。根据余弦函数图像的对称性可以得知α1时为零，因此开关管电压最大值为14.png再次观察u(θ)的图像，会发现它不是正弦波。用傅里叶公式对其进行正交分解，分解为余弦和正弦两个部分正弦部分 15.png 化简后再代入式③和④得到 16.png⑤ 余弦部分 17.png化简后再代入式④得到 18.png⑥在LX，LS，CS和RL构成的射频串联回路中，LS和CS的作用是只允许与其谐振频率相同的基波通过，其值与谐振频率及品质因数Q的关系在这里不在赘述。式⑤可以看出，开关管两端电压含有正弦成分，而射频电流为余弦函数。为了使功率因数为1，就需要一个电抗抵消掉，提供这个电抗的就是电感LX。抵消后，开关管两端电压剩下的余弦成分就会加在负载电阻上。一个工作周期内，开关管截止时两端的电压的平均值等于电源电压，因此可以得到19.png 20.png⑦可以发现这个式子与之前式⑥极为相似。为了进一步得到各个量之间的关系，进行下面的分析。输入功率为 21.png 因为电路的效率为100%，所以射频功率等于输入功率。22.png 通过比较式⑥和⑦，以及射频电流的峰值电流和有效电流的关系，可以得到23.png射频功率只由负载电阻消耗，因此最右边可以看为负载电阻两端有效电压与有效电流的乘积，进而可以求出负载电阻24.png 根据之前的分析，负载电阻还可以用另一种更为简单的方式求得 25.png通过前面对射频串联回路的分析，可以得到感抗 26.png 进而得出电感值 27.png至此，所有需要计算的元件值都已得出。</p><p><br></p><p><br></p><p>下面检验一下 因为公式复杂，因此用VB写了一个计算器（在附件中） 28.png输入已知量计算 29.png 用multisim把电路搭出来仿真 30.png波形理想，峰值电流和峰值电压与计算相符。经计算，电阻功耗和设计相符。</p><p><br></p><p>当然，E类也有一些缺点比如 难调试峰值电压（导通角为180°时为电源电压3.56倍）与峰值电流（导通角为180°时为输入电流2.68倍）大，对器件要求高。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>考研英语笔记</title>
    <link href="/sun/2023/09/07/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E7%AC%94%E8%AE%B0/"/>
    <url>/sun/2023/09/07/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="考研英语笔记">考研英语笔记</h2><h3 id="英语一题型结构与分值分析">英语一题型结构与分值分析</h3><ol type="1"><li><strong>完型填空</strong></li></ol><p>英语一完型填空，<strong>一共20题10分</strong>，根据上下文从四个选项中选择适合的选项填补文章的空缺。完型填空文章长，难度大，分值低，建立可以把这一部分放在最后复习。</p><ol start="2" type="1"><li><strong>阅读理解</strong></li></ol><p>阅读理解是考研英语的重中之重，也是占比分值较大的板块，英语一有四篇阅读，一篇阅读做五道题，一共20题40分。基础比较好的同学现在就可以开始复习啦。</p><ol start="3" type="1"><li><strong>新题型</strong></li></ol><p>新题型有三种题型，每年只考一种题型，一共10分。这部分的复习也可以安排在后期，实质上也是对阅读理解能力的考察。</p><ol start="4" type="1"><li><strong>翻译</strong></li></ol><p>英语一的翻译是翻译文章中画线的句子，一共10分。翻译对我们的能力要求较高呦，是对考研人综合能力的考察，不过也不用担心，你难大家都难。</p><ol start="5" type="1"><li><strong>作文</strong></li></ol><p>作文一般分为小作文和大作文，小作文100词以上10分，大作文160—200词之间20分。大作文是复习重点。</p><p>英语一的小作文是应用文写作，大作文是看图写作。</p><h3 id="英语一作文详解">英语一作文详解</h3><ol type="1"><li><strong>英语作文万能表格</strong></li></ol><figure><img src="英一图画作文表格.webp" alt="英一图画作文表格" /><figcaption aria-hidden="true">英一图画作文表格</figcaption></figure><ol start="2" type="1"><li><p><strong>四个常见观点:</strong></p><ol type="1"><li>融入社会</li><li>实现人生目标</li><li>培养积极向上的态度</li><li>建立竞争优势</li></ol></li><li><p><strong>例如2010年[文化火锅]可以这样写</strong></p><p>According to the picture,we can see a pot containing a number ofblocks.There are Chines characters on them,,such as [Kung fu],[Buddhism]and [Peking opera].In addition,the title below the picture is veryeye-catching:cultural hotpot enriches our lives.On the one hand,thispainting is very simple,with only a few strokes,but on the other hand,itevokes my deep thoughts on the subject behind it.</p><p>The idea this cartoon wishes to convey is very clear,mainly callingfor us to attach more importance to the quality of opening our mind todifferent cultures.First of all, integrating other excellent cultures isthe basis for our competitive advantage.Undoubtedly,if citizens in anation cannot culivate this quality from an early age,this nation willbe put in a very disadvantageous position when it comes to competingwith others,and they are more likely to fail.Secondly,the progress ofembracing foreign cultures outstanding parts is crucial for us to fostera positive mindest.No one candeny the fact that sticking to this goalcan,to a large extern,motivate us to achieve excellence.</p><p>In short,it is extremely crucial to develop the quality ofintegrating other cultures'positive parts into our own culture,which isof great significance to helping us foster a positive mindest andaccummulate competitive advantages.Therefor,we must alaways remindourselves and the people around us not to give up the pursuit ofit.</p></li><li><p><strong>历年大作文主题</strong></p></li></ol><figure><img src="英一大作文主题.webp" alt="历年大作文主题" /><figcaption aria-hidden="true">历年大作文主题</figcaption></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/sun/2023/09/07/hello-world/"/>
    <url>/sun/2023/09/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>考研高数笔记</title>
    <link href="/sun/2023/09/04/%E8%80%83%E7%A0%94%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/"/>
    <url>/sun/2023/09/04/%E8%80%83%E7%A0%94%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>等比求和公式 <spanclass="math display">\[\sum_{n=0}^{\infty}a*q^n=a*\frac{1-q^{n+1}}{1-q}\]</span>麦克劳林展开式 <span class="math display">\[\frac{1}{1-x}\rightarrow\sum_{n=0}^{\infty}x^n\]</span></p><p><span class="math display">\[\frac{1}{1+x}\rightarrow\sum_{n=0}^{\infty}(-x)^n\]</span></p><p><span class="math display">\[\frac{1}{1+x^2}\rightarrow\sum_{n=0}^{\infty}(-x^2)^n\]</span></p><p><span class="math display">\[\left(\frac{1}{1-x}\right)^2\rightarrow\sum_{n=0}^{\infty}x^n\]</span></p><p><span class="math display">\[\iiint \limits_{\Omega} z\mathrm{d}x\mathrm{d}y\mathrm{d}z里面的z\neqx^2+y^2 \\z=x^2+y^2与z=4只是限定积分区域的，所以你不能令原式=\int_{0}^{2\pi}\mathrm{d}\theta\int_{\rho^2}^{4}\mathrm{d}z\int_{0}^{2}\rho^3\mathrm{d}\rho\]</span></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Kotlin-入门笔记(一)</title>
    <link href="/sun/2023/08/25/Kotlin-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/sun/2023/08/25/Kotlin-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2id="android-kotlin保存数据的三种方式文件sharedpreferencessqlite">AndroidKotlin保存数据的三种方式（文件，SharedPreferences，SQLite）</h2><h3 id="文件存储">文件存储</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>milk-v点灯教程</title>
    <link href="/sun/2023/08/15/milk-v%E7%82%B9%E7%81%AF%E6%95%99%E7%A8%8B/"/>
    <url>/sun/2023/08/15/milk-v%E7%82%B9%E7%81%AF%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="milk-v-duo点灯教程shell命令shell脚本c语言">milk-vduo点灯教程（shell命令,shell脚本,C语言）</h2><h3 id="点灯前的准备参考此处">点灯前的准备(<ahref="https://milkv.io/zh/docs/duo/getting-started/boot">参考此处</a>)</h3><ol type="1"><li><p>一个烧录好<ahref="https://github.com/milkv-duo/milkv-duo-buildroot-sdk/releases/tag/20230616">最新镜像</a>的milk-vduo板子</p></li><li><p>启用ssh连接到milk-v duo</p></li><li><p>停止开机闪烁led的进程</p></li></ol><p>最新的镜像开机会启动一个闪烁led的进程，我们需要把它停掉才能进行下面的实验。使用top命令查看进程<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">top<br></code></pre></td></tr></table></figure> <img src="top.jpg" alt="top命令" /></p><p>可以看到PID进程号为164的进程，这个就是闪烁led的进程，我们使用kill指令结束它<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 164<br></code></pre></td></tr></table></figure>然后在用top指令发现这个进程已经被结束了，同时led灯也停止了闪烁</p><figure><img src="top2.jpg" alt="top命令" /><figcaption aria-hidden="true">top命令</figcaption></figure><h3 id="shell命令点灯">shell命令点灯</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> 440 &gt; /sys/class/gpio/export <span class="hljs-comment">#此时生成/sys/class/gpio/gpio440目录</span><br><span class="hljs-built_in">echo</span> out &gt; /sys/class/gpio/gpio440/direction<span class="hljs-comment">#再配置IO方向为输出：</span><br><span class="hljs-built_in">echo</span> 1 &gt; /sys/class/gpio/gpio440/value<span class="hljs-comment">#点亮LED</span><br><span class="hljs-built_in">echo</span> 0 &gt; /sys/class/gpio/gpio440/value<span class="hljs-comment">#熄灭LED</span><br><span class="hljs-built_in">echo</span> 440 &gt; /sys/class/gpio/unexport<span class="hljs-comment">#释放GPIO资源</span><br></code></pre></td></tr></table></figure><h3 id="shell脚本点灯">shell脚本点灯</h3><ul><li>先用系统自带的vi文本编辑器创建点灯脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi ~/led_blick.sh<br></code></pre></td></tr></table></figure><ul><li>把以下内容复制到脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">LED=440<br><br><span class="hljs-comment"># 激活GPIO-LED</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$LED</span> &gt; /sys/class/gpio/export<br><br><span class="hljs-comment"># 设置GPIO-LED 为输出</span><br><span class="hljs-built_in">echo</span> out &gt; /sys/class/gpio/gpio<span class="hljs-variable">$LED</span>/direction<br><br><span class="hljs-comment"># 循环10次：点亮LED，延时1秒，在关闭LED，再延时1秒</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">seq</span> 1 30)<br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> 1 /sys/class/gpio/gpio<span class="hljs-variable">$LED</span>/value<br>  <span class="hljs-built_in">sleep</span> 1<br>  <span class="hljs-built_in">echo</span> 0 /sys/class/gpio/gpio<span class="hljs-variable">$LED</span>/value<br>  <span class="hljs-built_in">sleep</span> 1<br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$LED</span> &gt; /sys/class/gpio/unexport<br></code></pre></td></tr></table></figure><ul><li>执行脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> a+x /root/led_blick.sh <span class="hljs-comment">#赋予可执行权限</span><br>/root/led_blick.sh <span class="hljs-comment">#运行脚本</span><br></code></pre></td></tr></table></figure><h3 id="c语言点灯">C语言点灯</h3><ul><li><p>在milk-v duo里编写用于点灯的c源文件或者在电脑上写好传到mlk-vduo上 led_blink.c <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span> <span class="hljs-comment">//define O_WRONLY and O_RDONLY</span></span><br><br><span class="hljs-comment">// LED 引脚</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_EXPORT <span class="hljs-string">&quot;/sys/class/gpio/export&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_UNEXPORT <span class="hljs-string">&quot;/sys/class/gpio/unexport&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_PIN_VAL <span class="hljs-string">&quot;440&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_DIR <span class="hljs-string">&quot;/sys/class/gpio/gpio440/direction&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_DIR_VAL <span class="hljs-string">&quot;OUT&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_VAL <span class="hljs-string">&quot;/sys/class/gpio/gpio440/value&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_VAL_H <span class="hljs-string">&quot;1&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_RST_VAL_L <span class="hljs-string">&quot;0&quot;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> fd;<br>    <span class="hljs-type">int</span> count = <span class="hljs-number">30</span>;<br><br>    <span class="hljs-comment">// 打开端口/sys/class/gpio# echo 440 &gt; export</span><br>    fd = open(SYSFS_GPIO_EXPORT, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ERR: export open error.\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> EXIT_FAILURE;<br>    &#125;<br>    write(fd, SYSFS_GPIO_RST_PIN_VAL, <span class="hljs-keyword">sizeof</span>(SYSFS_GPIO_RST_PIN_VAL));<br>    close(fd);<br><br>    <span class="hljs-comment">// 设置端口方向/sys/class/gpio/gpio440# echo out &gt; direction</span><br>    fd = open(SYSFS_GPIO_RST_DIR, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ERR: direction open error.\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> EXIT_FAILURE;<br>    &#125;<br>    write(fd, SYSFS_GPIO_RST_DIR_VAL, <span class="hljs-keyword">sizeof</span>(SYSFS_GPIO_RST_DIR_VAL));<br>    close(fd);<br><br>    <span class="hljs-comment">// 输出复位信号: 拉高&gt;100ns</span><br>    fd = open(SYSFS_GPIO_RST_VAL, O_RDWR);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ERR: gpio open error.\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> EXIT_FAILURE;<br>    &#125;<br>    <span class="hljs-keyword">while</span> (count)<br>    &#123;<br>        count--;<br>        write(fd, SYSFS_GPIO_RST_VAL_H, <span class="hljs-keyword">sizeof</span>(SYSFS_GPIO_RST_VAL_H));<br>        usleep(<span class="hljs-number">1000000</span>);<br>        write(fd, SYSFS_GPIO_RST_VAL_L, <span class="hljs-keyword">sizeof</span>(SYSFS_GPIO_RST_VAL_L));<br>        usleep(<span class="hljs-number">1000000</span>);<br>    &#125;<br>    close(fd);<br><br>    <span class="hljs-comment">// 打开端口/sys/class/gpio# echo 440 &gt; unexport</span><br>    fd = open(SYSFS_GPIO_UNEXPORT, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ERR: unexport open error.\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> EXIT_FAILURE;<br>    &#125;<br>    write(fd, SYSFS_GPIO_RST_PIN_VAL, <span class="hljs-keyword">sizeof</span>(SYSFS_GPIO_RST_PIN_VAL));<br>    close(fd);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p></li><li><p>使用下列指令编译 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">riscv64-unknown-linux-gnu-gcc -static -o led_blink led_blink.c<br></code></pre></td></tr></table></figure></p></li><li><p>编译完成后执行即可 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> a+x led_blick <span class="hljs-comment">#赋予可执行权限</span><br>./led_blink <span class="hljs-comment">#运行脚本</span><br></code></pre></td></tr></table></figure></p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
